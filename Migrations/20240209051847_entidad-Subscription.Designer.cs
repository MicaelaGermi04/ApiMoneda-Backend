// <auto-generated />
using System;
using ApiMoneda.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApiMoneda.Migrations
{
    [DbContext(typeof(ConversorContext))]
    [Migration("20240209051847_entidad-Subscription")]
    partial class entidadSubscription
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.13");

            modelBuilder.Entity("ApiMoneda.Entities.Conversion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("ConvertedAmount")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("FirstCurrencyAmount")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstCurrencyName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SecondCurrencyName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Conversions");
                });

            modelBuilder.Entity("ApiMoneda.Entities.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ISOcode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Currencies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ISOcode = "ARS",
                            Name = "Peso argentino",
                            Value = 0.0012m
                        },
                        new
                        {
                            Id = 12,
                            ISOcode = "CLP",
                            Name = "Peso chileno",
                            Value = 0.0011m
                        },
                        new
                        {
                            Id = 10,
                            ISOcode = "$",
                            Name = "Peso mexicano",
                            Value = 0.059m
                        },
                        new
                        {
                            Id = 11,
                            ISOcode = "UYI",
                            Name = "Peso uruguayo",
                            Value = 0.026m
                        },
                        new
                        {
                            Id = 7,
                            ISOcode = "AUD",
                            Name = "Dolar australiano",
                            Value = 0.69m
                        },
                        new
                        {
                            Id = 6,
                            ISOcode = "CAD",
                            Name = "Dolar canadiense",
                            Value = 0.76m
                        },
                        new
                        {
                            Id = 2,
                            ISOcode = "USD",
                            Name = "Dolar estadounidense",
                            Value = 1m
                        },
                        new
                        {
                            Id = 4,
                            ISOcode = "GBP",
                            Name = "Libra esterlina",
                            Value = 1.28m
                        },
                        new
                        {
                            Id = 5,
                            ISOcode = "JPY",
                            Name = "Yen",
                            Value = 0.0071m
                        },
                        new
                        {
                            Id = 9,
                            ISOcode = "CNY",
                            Name = "Yuan chino",
                            Value = 0.14m
                        },
                        new
                        {
                            Id = 8,
                            ISOcode = "CHF",
                            Name = "Franco suizo",
                            Value = 1.19m
                        },
                        new
                        {
                            Id = 13,
                            ISOcode = "BRL",
                            Name = "Real",
                            Value = 0.21m
                        },
                        new
                        {
                            Id = 3,
                            ISOcode = "EUR",
                            Name = "Euro",
                            Value = 1.11m
                        });
                });

            modelBuilder.Entity("ApiMoneda.Entities.Subscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AmountOfConvertions")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Subscriptions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AmountOfConvertions = 10,
                            Name = "Free",
                            Price = 0.0
                        },
                        new
                        {
                            Id = 2,
                            AmountOfConvertions = 100,
                            Name = "Trial",
                            Price = 0.80000000000000004
                        },
                        new
                        {
                            Id = 3,
                            AmountOfConvertions = 999999999,
                            Name = "Pro",
                            Price = 1.0
                        });
                });

            modelBuilder.Entity("ApiMoneda.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("Role")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SubscriptionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SubscriptionId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "micaela@mail.com",
                            FirstName = "Micaela",
                            LastName = "Germi",
                            Password = "mica123",
                            Role = 0,
                            SubscriptionId = 3,
                            UserName = "MicaG"
                        },
                        new
                        {
                            Id = 2,
                            Email = "Juan@mail.com",
                            FirstName = "Juan",
                            LastName = "Perez",
                            Password = "juan123",
                            Role = 1,
                            SubscriptionId = 2,
                            UserName = "Juancito"
                        },
                        new
                        {
                            Id = 3,
                            Email = "Maria@mail.com",
                            FirstName = "Maria",
                            LastName = "Lopez",
                            Password = "maria123",
                            Role = 1,
                            SubscriptionId = 1,
                            UserName = "MariaJ"
                        });
                });

            modelBuilder.Entity("UserCurrencies", b =>
                {
                    b.Property<int>("CurrenciesId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CurrenciesId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserCurrencies");
                });

            modelBuilder.Entity("ApiMoneda.Entities.Conversion", b =>
                {
                    b.HasOne("ApiMoneda.Entities.User", "User")
                        .WithMany("Conversions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ApiMoneda.Entities.User", b =>
                {
                    b.HasOne("ApiMoneda.Entities.Subscription", "Subscription")
                        .WithMany("Users")
                        .HasForeignKey("SubscriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subscription");
                });

            modelBuilder.Entity("UserCurrencies", b =>
                {
                    b.HasOne("ApiMoneda.Entities.Currency", null)
                        .WithMany()
                        .HasForeignKey("CurrenciesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiMoneda.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ApiMoneda.Entities.Subscription", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("ApiMoneda.Entities.User", b =>
                {
                    b.Navigation("Conversions");
                });
#pragma warning restore 612, 618
        }
    }
}
